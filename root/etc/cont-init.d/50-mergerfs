#!/usr/bin/with-contenv bash
. /usr/local/bin/variables

sleep 10

if [ "$poolingfs" == "mergerfs" ]; then
    echo "*** checking mergerfs mountpoint: ${fuse_mountpoint}"
    while findmnt "${fuse_mountpoint}" | grep -q fuse.mergerfs; do
        echo "ERROR: mergerfs mountpoint (${fuse_mountpoint}) already mounted"
        fusermount -uz "${fuse_mountpoint}"
        echo "Retrying in 30s ..."
        sleep 30s
    done
    fs_branches=${mfs_branches}
fi

if [ "$poolingfs" == "unionfs" ]; then
    echo "*** checking unionfs mountpoint: ${fuse_mountpoint}"
    while findmnt "${fuse_mountpoint}" | grep -q fuse.unionfs; do
        echo "ERROR: unionfs mountpoint (${fuse_mountpoint}) already mounted"
        fusermount -uz "${fuse_mountpoint}"
        echo "Retrying in 30s ..."
        sleep 30s
    done
    fs_branches=${ufs_branches}
fi

# check all folders required by mount branch config in mfs_branches/ufs_branches exist
for branch in $(echo $fs_branches |  tr : " ")
do 
    required_dir=${branch/=*}

    # make sure fs branch folder exists to use as a source
    if ! [[ -d ${required_dir} ]]; then
        ls -la /mnt
        echo "Error - directory required by ${poolingfs} is missing: ${required_dir}"
        exit 1
    fi
done

# setup fuse_mountpoint folder
for branch in ${fuse_mountpoint}
do 
    required_dir=${branch/=*}

    # make sure mountpoint dir exists
    [[ -d ${required_dir} ]] || echo "Warning - dir required by mergerfs is missing. Creating empty dir for ${required_dir}"
    mkdir -p ${required_dir}
    
    # permissions
    chown abc:abc ${required_dir}
done


